//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace geeWiz.Resources.Files {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Tooltips {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Tooltips() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("geeWiz.Resources.Files.Tooltips", typeof(Tooltips).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Takes you to the project&apos;s github..
        /// </summary>
        internal static string General_About {
            get {
                return ResourceManager.GetString("General_About", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This menu contains various tools to toggle geeWiz&apos;s features..
        /// </summary>
        internal static string Settings {
            get {
                return ResourceManager.GetString("Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Toggles the colouring of view tabs by document.
        ///
        ///Note:
        ///Tab colouring will override default Revit tab colouring behavior. Whilst this setting can be disabled afterwards, you will need to restart Revit to reinstate default tab colouring afterwards..
        /// </summary>
        internal static string Settings_ColourTabs {
            get {
                return ResourceManager.GetString("Settings_ColourTabs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Toggles between light and dark mode.
        ///
        ///Shift + Click:
        ///Sets the canvas theme to Dark instead of light..
        /// </summary>
        internal static string Settings_UiToggle {
            get {
                return ResourceManager.GetString("Settings_UiToggle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Toggles the Warden feature.
        ///
        ///Warden is a simple command interceptor, which will verify if you want to use bad practice commands before they execute..
        /// </summary>
        internal static string Settings_Warden {
            get {
                return ResourceManager.GetString("Settings_Warden", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is just a testing command.
        ///
        ///It will make all sheet names in the current document uppercase.
        ///
        ///This command attempts to demonstrate:
        ///- Ribbon construction logic
        ///- Collection of elements
        ///- Worksharing filtering
        ///- Using the progress bar
        ///- Using a transaction
        ///- Use of forms library
        ///
        ///More to come in future, but enjoy for now!.
        /// </summary>
        internal static string Tools_Testing {
            get {
                return ResourceManager.GetString("Tools_Testing", resourceCulture);
            }
        }
    }
}
